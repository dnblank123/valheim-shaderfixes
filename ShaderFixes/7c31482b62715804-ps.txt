// DOF
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Fri Aug 30 15:02:57 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float
// TEXCOORD                 0   xy          1     NONE   float
// TEXCOORD                 1     zw        1     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_4_0
dcl_immediateConstantBuffer { { 0.624630, 0.543370, 0.827900, 0},
                              { -0.134140, -0.944880, 0.954350, 0},
                              { 0.387720, -0.434750, 0.582530, 0},
                              { 0.121260, -0.192820, 0.227780, 0},
                              { -0.203880, 0.111330, 0.232300, 0},
                              { 0.831140, -0.292180, 0.881000, 0},
                              { 0.107590, -0.578390, 0.588310, 0},
                              { 0.282850, 0.790360, 0.839450, 0},
                              { -0.366220, 0.395160, 0.538760, 0},
                              { 0.755910, 0.219160, 0.787040, 0},
                              { -0.526100, 0.023860, 0.526640, 0},
                              { -0.882160, -0.244710, 0.915470, 0},
                              { -0.488880, -0.293300, 0.570110, 0},
                              { 0.440140, -0.085580, 0.448380, 0},
                              { 0.211790, 0.513730, 0.555670, 0},
                              { 0.054830, 0.957010, 0.958580, 0},
                              { -0.590010, -0.705090, 0.919380, 0},
                              { -0.800650, 0.246310, 0.837680, 0},
                              { -0.194240, -0.184020, 0.267570, 0},
                              { -0.436670, 0.767510, 0.883040, 0},
                              { 0.216660, 0.116020, 0.245770, 0},
                              { 0.156960, -0.856000, 0.870270, 0},
                              { -0.758210, 0.583630, 0.956820, 0},
                              { 0.992840, -0.029040, 0.993270, 0},
                              { -0.222340, -0.579070, 0.620290, 0},
                              { 0.550520, -0.669840, 0.867040, 0},
                              { 0.464310, 0.281150, 0.542800, 0},
                              { -0.072140, 0.605540, 0.609820, 0} }
dcl_constantbuffer cb0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
dcl_temps 8
mad r0.xy, v1.zwzz, cb0[4].xyxx, cb0[4].zwzz
sample r0.xyzw, r0.xyxx, t0.xwyz, s0
mul r1.xyzw, r0.yyyy, cb0[3].xyxy
mul r1.xyzw, r1.xyzw, cb0[5].wwww
mul r2.x, r0.y, l(0.250000)
max r2.x, r2.x, cb0[5].z
mul r2.yzw, r0.xxzw, r2.xxxx
mov r3.x, l(1.200000)
mov r4.xyz, r2.yzwy
mov r0.z, r2.x
mov r0.w, l(0)
loop
  ige r3.y, r0.w, l(7) //28
  breakc_nz r3.y
  mul r5.xyzw, r1.xyzw, icb[r0.w + 0].xyxy
  mov r3.z, icb[r0.w + 0].z
  // div r5.xyzw, r5.xyzw, r3.xxzz
  add r5.xyzw, r5.xyzw, v1.zwzw
  // mad r5.xyzw, r5.xyzw, cb0[4].xyxy, cb0[4].zwzw
  sample r6.xyzw, r5.xyxx, t0.xyzw, s0
  sample r5.xyzw, r5.zwzz, t0.xyzw, s0
  add r3.y, r5.w, r6.w
  lt r3.y, l(0.000000), r3.y
  if_nz r3.y
    // mul r0.x, r0.y, icb[r0.w + 0].z
    mov r7.x, r6.w
    mov r7.y, r5.w
    mad r3.yz, -r0.xxyx, l(0.000000, 0.833333313, 1.000000, 0.000000), r7.xxyx
    add r3.yz, r3.yyzy, l(0.000000, 0.265000, 0.265000, 0.000000)
    // mul_sat r3.yz, r3.yyzy, l(0.000000, 3.773585, 3.773585, 0.000000)
    // mad r7.xy, r3.yzyy, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    // mul r3.yz, r3.yyzy, r3.yyzy
    mul r3.yz, r3.yyzy, r7.xxyx
    mul r5.xyz, r3.zzzz, r5.xyzx
    mad r5.xyz, r6.xyzx, r3.yyyy, r5.xyzx
    add r4.xyz, r4.xyzx, r5.xyzx
    // dp2 r0.x, r3.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
    add r0.x, r3.y, r3.z
    add r0.z, r0.x, r0.z
  endif
  iadd r0.w, r0.w, l(1)
endloop
div o0.xyz, r4.xyzx, r0.zzzz
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used
